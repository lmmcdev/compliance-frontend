name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    permissions:
       id-token: write
       contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      # Configura Node (ajusta versión a la que usas en el proyecto)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: ./compliance-frontend/package-lock.json

      - name: Install dependencies
        run: npm install
        working-directory: ./compliance-frontend

      - name: Build app
        run: npm run build
        working-directory: ./compliance-frontend

      # Despliegue a Azure SWA
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ASHY_BUSH_0879A080F }}
          action: "upload"
          app_location: "./compliance-frontend"
          api_location: ""   # si tienes Functions, aquí va la ruta
          output_location: "build" # carpeta generada por npm run build
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"
